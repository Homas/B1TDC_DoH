#(c) 2020, Vadim Pavlov, ioc2rpz(at)gmail.com
#based on https://www.nginx.com/blog/using-nginx-as-dot-doh-gateway/

load_module modules/ngx_http_js_module.so;
load_module modules/ngx_stream_js_module.so;
events {}
http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  dns  '$remote_addr - $remote_user [$time_local] "$request" '
                     '[ $msec, $request_time, $upstream_response_time $pipe ] '
                     '$status $body_bytes_sent "-" "-" "$http_x_forwarded_for" '
                     '$upstream_http_x_dns_question $upstream_http_x_dns_type '
                     '$upstream_http_x_dns_result '
                     '$upstream_http_x_dns_ttl $upstream_http_x_dns_answers '
                     '$upstream_cache_status';

    access_log  /var/log/nginx/doh-access.log dns;

    # This is our upstream connection to the njs translation process
    upstream dohloop {
        zone dohloop 64k;
        server 127.0.0.1:8053;
        keepalive_timeout 60s;
        keepalive_requests 1000;
        keepalive 10;
    }

    proxy_cache_path /var/cache/nginx/doh_cache levels=1:2 keys_zone=doh_cache:10m;

    # This virtual server accepts HTTP/2 over HTTPS
    server {
        access_log  off; # logs are turned off by default
        listen 443 ssl http2;
        ssl_certificate /etc/nginx/ssl/certs/doh.pem;
        ssl_certificate_key /etc/nginx/ssl/private/doh.pem;
        ssl_session_cache shared:ssl_cache:10m;
        ssl_session_timeout 10m;

        # Return 404 for non-DoH requests
        location / {
            return 404 "404 Not Found\n";
        }

        # Here we downgrade the HTTP/2 request to HTTP/1.1 and forward it to
        # the DoH loop service
        location /dns-query {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_cache doh_cache;
            proxy_cache_key $scheme$proxy_host$uri$is_args$args$request_body;
            proxy_pass http://dohloop;
            auth_basic "really?";
            auth_basic_user_file /etc/nginx/users.passwd;
        }

        location /dns-query-noauth {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_cache doh_cache;
            proxy_cache_key $scheme$proxy_host$uri$is_args$args$request_body;
            proxy_pass http://dohloop;
        }

    }
}

stream {
    # Import the JavaScript file that processes the DoH packets
    js_include /etc/nginx/njs.d/nginx_stream.js;
    # DNS upstream pool
    upstream dns_tcp {
        zone dns_tcp 64k;
        server 52.119.40.100:53;
        server 103.80.5.100:53;
    }
 
    # DNS over TLS upstream pool
 #   upstream dot {
 #       zone dot 64k;
 #       server 8.8.8.8:853;
 #   }

    # DoT server for decryption
    server {
        listen 853 ssl;
        ssl_certificate /etc/nginx/ssl/certs/doh.pem;
        ssl_certificate_key /etc/nginx/ssl/private/doh.pem;
        proxy_pass dns_tcp;
    }
    # DNS over HTTPS (gateway) service
    server {
        listen 127.0.0.1:8053;
        js_filter dns_filter_doh_request;
        proxy_pass dns_tcp;
    }

}